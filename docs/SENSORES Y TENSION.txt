CONEXIONES AGREGADAS
-------------------------------------------
BATERIA
1. DIVISOR DE TENSION R1: 1200 y R2: 220 OHMS () (relacion 0.1549)
SENSORES 
2. DIVISOR DE TENSION DE R1: 120OHMS, R2, 470 OHMS EN A2 (FLUJO)
3. DIVISOR DE TENSION IGUAL AL ANTERIOR DE LA SALIDA DEL PIN 1 DE PRESION A A3
En teoria los niveles de tension no caerian en modo linea  (ya que el regulador estabiliza los 5v).

CORRECCION PARA PROTOTIPOS DEFINITIVOS: 
--------------------------------------------------------------------------
SE DEBERA COLOCAR EL VALOR REAL DE RESISTENCIAS 
MEDIDAS Y NO SU VALOR NOMINAL EN EL CODIGO FUENTE.

Se define (en pinout) el nuevo pin de entrada (para baterias)
#define PIN_MPX_LEV     A2

CAMBIOS EN DEFAULTS.H
----------------------------------------

// 5v to 1.1v dividiver, in order to use 1.1 arduino vref (more stable)
// Vo = V1 x R2/(R1 + R2)
// -----X
//     R1
// V1   X----- 
//     R2  Vo
// -----X-----
//R1: 120, R2: 470
// Amp: (120 + 470)/120 = 4.9166666
#define VOLTAGE_CONV   4.916666
#define USING_1v1_4PRESS
#define TIME_VOLTAGE_SENSOR 50                // msec


MEDIDAS DE NIVEL DE TENSION (NECESARIO PARA FLUJO Y BATERIAS)
---------------------------------------------------

      vlevel = float(analogRead(PIN_MPX_LEV))/1024.*1.1*VOLTAGE_CONV;

      // Is like 1/vs
      vs = vlevel /** vfactor*/; 

MEDICION DE FLUJO 
------------------------	  
En la medicion de flujo no cambia nada en los niveles ni en las cuentas, ya que este sensor sigue alimentado por 5V. 
La diferencia es que ahora no fluctua EN BATERIAS al caer la tension.

MEDICION DE PRESION
-------------------------------------

Se definio en preprocesador la variable (en defaults.h)
USING_1v1_4PRESS
      #ifdef USING_1v1_4PRESS
      pressure_p = ( analogRead(PIN_PRESSURE) / (1023.)/*- verrp * 0.2 */ - 0.04 ) / 0.09 * 1000 * DEFAULT_PA_TO_CM_H20;//MPX5010      
      #else //Original, pressure sensor connected to A0
      pressure_p = ( analogRead(A0) / (1023.) /*- verrp * 0.2 */ - 0.04 ) / 0.09 * 1000 * DEFAULT_PA_TO_CM_H20;//MPX5010
      #endif

MEDICION DE BATERIAS
--------------------------------------
vlevel = float(analogRead(PIN_MPX_LEV))/1024.*1.1*VOLTAGE_CONV;



https://www.arduino.cc/reference/en/language/functions/analog-io/analogreference/

Arduino megaAVR Boards (Uno WiFi Rev2)
DEFAULT: a built-in 0.55V reference
INTERNAL: a built-in 0.55V reference
VDD: Vdd of the ATmega4809. 5V on the Uno WiFi Rev2
INTERNAL0V55: a built-in 0.55V reference
INTERNAL1V1: a built-in 1.1V reference
INTERNAL1V5: a built-in 1.5V reference
INTERNAL2V5: a built-in 2.5V reference
INTERNAL4V3: a built-in 4.3V reference
EXTERNAL: the voltage applied to the AREF pin (0 to 5V only) is used as the reference

